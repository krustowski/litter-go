name: littr CI/CD deployment pipeline

on:
  workflow_dispatch:

jobs:
  prod_deploy:
    runs-on: ${{ vars.RUNNER_LABELS }}
    steps:
    - uses: actions/checkout@v4
    - name: Deploy prod docker container, recreate container with fresh image.
      env:
        API_TOKEN: ${{ secrets.API_TOKEN }}
        APP_ENVIRONMENT: ${{ vars.APP_ENVIRONMENT }}
        APP_PEPPER: ${{ secrets.APP_PEPPER }}
        APP_URLS_TRAEFIK: ${{ vars.APP_URLS_TRAEFIK }}
        DOCKER_CONTAINER_NAME: ${{ vars.DOCKER_CONTAINER_NAME }}
        DOCKER_EXTERNAL_PORT: ${{ vars.DOCKER_EXTERNAL_PORT }}
        DOCKER_NETWORK_NAME: ${{ vars.DOCKER_NETWORK_NAME }}
        DOCKER_SWAGGER_CONTAINER_NAME: ${{ vars.DOCKER_SWAGGER_CONTAINER_NAME }}
        DOCKER_SWAGGER_EXTERNAL_PORT: ${{ vars.DOCKER_SWAGGER_EXTERNAL_PORT }}
        DOCKER_VOLUME_DATA_NAME: ${{ vars.DOCKER_VOLUME_DATA_NAME }}
        DOCKER_VOLUME_PIX_NAME: ${{ vars.DOCKER_VOLUME_PIX_NAME }}
        LOKI_LABELS: ${{ vars.LOKI_LABELS }}
        LOKI_URL: ${{ secrets.LOKI_URL }}
        MAIL_HELO: ${{ secrets.MAIL_HELO }}
        MAIL_HOST: ${{ secrets.MAIL_HOST }}
        MAIL_PORT: ${{ secrets.MAIL_PORT }}
        MAIL_SASL_USR: ${{ secrets.MAIL_SASL_USR }}
        MAIL_SASL_PWD: ${{ secrets.MAIL_SASL_PWD }}
        REGISTRATION_ENABLED: ${{ vars.REGISTRATION_ENABLED }}
        REGISTRY: ${{ secrets.REGISTRY }} 
        REGISTRY_USER: ${{ secrets.REGISTRY_USER }}
        REGISTRY_PASSWORD: ${{ secrets.REGISTRY_PASSWORD }}
        VAPID_PUB_KEY: ${{ secrets.VAPID_PUB_KEY }}
        VAPID_PRIV_KEY: ${{ secrets.VAPID_PRIV_KEY }}
        VAPID_SUBSCRIBER: ${{ secrets.VAPID_SUBSCRIBER }}
      run: make run

